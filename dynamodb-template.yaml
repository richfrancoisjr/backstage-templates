apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: aws-dynamodb-table
  title: AWS DynamoDB Table Template
  description: Create a DynamoDB table using AWS ACK Controller
  tags:
    - aws
    - dynamodb
    - database
    - ack
spec:
  owner: platform-team
  type: service
  parameters:
    - title: DynamoDB Table Configuration
      required: 
        - tableName
        - partitionKey
        - partitionKeyType
      properties:
        tableName:
          title: Table Name
          type: string
          description: Name of the DynamoDB table
          pattern: '^[a-zA-Z0-9_.-]+$'
        partitionKey:
          title: Partition Key
          type: string
          description: Primary partition key attribute name
        partitionKeyType:
          title: Partition Key Type
          type: string
          description: Data type of the partition key
          enum:
            - S
            - N
            - B
          enumNames:
            - String
            - Number
            - Binary
          default: S
        sortKey:
          title: Sort Key (Optional)
          type: string
          description: Sort key attribute name (optional)
        sortKeyType:
          title: Sort Key Type
          type: string
          description: Data type of the sort key
          enum:
            - S
            - N
            - B
          enumNames:
            - String
            - Number
            - Binary
          default: S
        billingMode:
          title: Billing Mode
          type: string
          description: Billing mode for the table
          enum:
            - PROVISIONED
            - PAY_PER_REQUEST
          enumNames:
            - Provisioned
            - On-Demand (Pay per request)
          default: PAY_PER_REQUEST
        readCapacity:
          title: Read Capacity Units
          type: number
          description: Read capacity units (only for PROVISIONED billing mode)
          default: 5
          minimum: 1
        writeCapacity:
          title: Write Capacity Units
          type: number
          description: Write capacity units (only for PROVISIONED billing mode)
          default: 5
          minimum: 1
  steps:
    - id: log
      name: Log
      action: debug:log
      input:
        message: Creating DynamoDB table ${{ parameters.tableName }}

    - id: create-manifest
      name: Create DynamoDB Table Manifest
      action: fetch:template
      input:
        url: https://github.com/richfrancoisjr/backstage-templates/tree/main/manifests
        targetPath: ./
        values:
          tableName: ${{ parameters.tableName }}
          partitionKey: ${{ parameters.partitionKey }}
          partitionKeyType: ${{ parameters.partitionKeyType }}
          sortKey: ${{ parameters.sortKey }}
          sortKeyType: ${{ parameters.sortKeyType }}
          billingMode: ${{ parameters.billingMode }}
          readCapacity: ${{ parameters.readCapacity }}
          writeCapacity: ${{ parameters.writeCapacity }}


    - id: show-manifest
      name: DynamoDB Table Manifest Created Successfully
      action: debug:log
      input:
        message: |
          ✅ DynamoDB table manifest created successfully!
          
          📁 Generated file: dynamodb-table.yaml
          🗃️  Table name: ${{ parameters.tableName }}
          🔑 Partition key: ${{ parameters.partitionKey }} (${{ parameters.partitionKeyType }})
          {% if parameters.sortKey %}🔑 Sort key: ${{ parameters.sortKey }} (${{ parameters.sortKeyType }}){% endif %}
          💰 Billing mode: ${{ parameters.billingMode }}
          {% if parameters.billingMode == 'PROVISIONED' %}📊 Capacity: ${{ parameters.readCapacity }} RCU / ${{ parameters.writeCapacity }} WCU{% endif %}
          
          🚀 To deploy this DynamoDB table to your cluster, run:
          kubectl apply -f dynamodb-table.yaml
          
          📋 The manifest is ready for deployment!
