# Updated catalog configuration - local files only - 2025-08-15-17:30
backstage:
  podAnnotations:
    rollme: "${timestamp}"

  initContainers:
    - name: wait-for-postgres
      image: postgres:15
      command:
        - sh
        - -c
        - |
          timeout=300
          elapsed=0
          until pg_isready -h backstage-postgresql -p 5432 -U postgres; do
            if [ $elapsed -ge $timeout ]; then
              echo "Timeout waiting for PostgreSQL after ${timeout}s"
              exit 1
            fi
            echo "Waiting for PostgreSQL to be ready... (${elapsed}s/${timeout}s)"
            sleep 5
            elapsed=$((elapsed + 5))
          done
          echo "PostgreSQL is ready!"

  env:
    BACKSTAGE_BACKEND_READING_ALLOW_0: "host=github.com"
    BACKSTAGE_BACKEND_READING_ALLOW_1: "host=raw.githubusercontent.com"
    BACKSTAGE_INTEGRATIONS_GITHUB_0_HOST: "github.com"
    BACKSTAGE_INTEGRATIONS_GITHUB_1_HOST: "raw.githubusercontent.com"  

  appConfig:
    app:
      title: CSB DXP Platform Catalog
      baseUrl: ${base_url}
    
    organization:
      name: CSB DXP Platform
    
    backend:
      baseUrl: ${base_url}
      database:
        client: pg
        connection:
          host: backstage-postgresql
          port: 5432
          user: postgres
          password: ${postgres_password}
          database: backstage
      reading:
        allow:
          - host: github.com
          - host: raw.githubusercontent.com
            token: ''
      csp:
        connect-src: ["'self'", 'http:', 'https:', 'data:']
        img-src: ["'self'", 'http:', 'https:', 'data:']
        script-src: ["'self'", "'unsafe-inline'", "'unsafe-eval'"]
        style-src: ["'self'", "'unsafe-inline'", 'https:']
        font-src: ["'self'", 'https:', 'data:']

    integrations:
      github:
        - host: github.com
          token: ''
        - host: raw.githubusercontent.com
          token: ''  

    auth:
      environment: development
      providers:
        guest:
          dangerouslyAllowOutsideDevelopment: true
    
    catalog:
      locations:
        - type: url
          target: https://raw.githubusercontent.com/richfrancoisjr/backstage-s3-template/main/s3-template.yaml
    
    techdocs:
      builder: 'local'
      generator:
        runIn: 'local'
      publisher:
        type: 'local'


postgresql:
  enabled: true
  auth:
    postgresPassword: ${postgres_password}
    username: postgres
    database: backstage
  primary:
    persistence:
      enabled: true
      size: 8Gi
      storageClass: gp2
    readinessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1

ingress:
  enabled: ${enable_ingress}
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
